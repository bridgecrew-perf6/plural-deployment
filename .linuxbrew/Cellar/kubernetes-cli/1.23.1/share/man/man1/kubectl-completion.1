.nh
.TH KUBERNETES(1) kubernetes User Manuals
Eric Paris
Jan 2015

.SH NAME
.PP
kubectl completion \- Output shell completion code for the specified shell (bash, zsh or fish)


.SH SYNOPSIS
.PP
\fBkubectl completion\fP [OPTIONS]


.SH DESCRIPTION
.PP
Output shell completion code for the specified shell (bash, zsh, fish, or powershell). The shell code must be evaluated to provide interactive completion of kubectl commands.  This can be done by sourcing it from the .bash\_profile.

.PP
Detailed instructions on how to do this are available here:

.PP
.RS

.nf
for macOS:
https://kubernetes.io/docs/tasks/tools/install\-kubectl\-macos/#enable\-shell\-autocompletion

for linux:
https://kubernetes.io/docs/tasks/tools/install\-kubectl\-linux/#enable\-shell\-autocompletion

for windows:
https://kubernetes.io/docs/tasks/tools/install\-kubectl\-windows/#enable\-shell\-autocompletion

.fi
.RE

.PP
Note for zsh users: [1] zsh completions are only supported in versions of zsh >= 5.2.


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-as\fP=""
	Username to impersonate for the operation. User could be a regular user or a service account in a namespace.

.PP
\fB\-\-as\-group\fP=[]
	Group to impersonate for the operation, this flag can be repeated to specify multiple groups.

.PP
\fB\-\-as\-uid\fP=""
	UID to impersonate for the operation.

.PP
\fB\-\-azure\-container\-registry\-config\fP=""
	Path to the file containing Azure container registry configuration information.

.PP
\fB\-\-cache\-dir\fP="/tmp/kubernetes\-cli\-20211216\-7728\-4tsrr/.brew\_home/.kube/cache"
	Default cache directory

.PP
\fB\-\-certificate\-authority\fP=""
	Path to a cert file for the certificate authority

.PP
\fB\-\-client\-certificate\fP=""
	Path to a client certificate file for TLS

.PP
\fB\-\-client\-key\fP=""
	Path to a client key file for TLS

.PP
\fB\-\-cluster\fP=""
	The name of the kubeconfig cluster to use

.PP
\fB\-\-context\fP=""
	The name of the kubeconfig context to use

.PP
\fB\-\-insecure\-skip\-tls\-verify\fP=false
	If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure

.PP
\fB\-\-kubeconfig\fP=""
	Path to the kubeconfig file to use for CLI requests.

.PP
\fB\-\-match\-server\-version\fP=false
	Require server version to match client version

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
	If present, the namespace scope for this CLI request

.PP
\fB\-\-password\fP=""
	Password for basic authentication to the API server

.PP
\fB\-\-profile\fP="none"
	Name of profile to capture. One of (none|cpu|heap|goroutine|threadcreate|block|mutex)

.PP
\fB\-\-profile\-output\fP="profile.pprof"
	Name of the file to write the profile to

.PP
\fB\-\-request\-timeout\fP="0"
	The length of time to wait before giving up on a single server request. Non\-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests.

.PP
\fB\-s\fP, \fB\-\-server\fP=""
	The address and port of the Kubernetes API server

.PP
\fB\-\-tls\-server\-name\fP=""
	Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used

.PP
\fB\-\-token\fP=""
	Bearer token for authentication to the API server

.PP
\fB\-\-user\fP=""
	The name of the kubeconfig user to use

.PP
\fB\-\-username\fP=""
	Username for basic authentication to the API server

.PP
\fB\-\-version\fP=false
	Print version information and quit

.PP
\fB\-\-warnings\-as\-errors\fP=false
	Treat warnings received from the server as errors and exit with a non\-zero exit code


.SH EXAMPLE
.PP
.RS

.nf
  # Installing bash completion on macOS using homebrew
  ## If running Bash 3.2 included with macOS
  brew install bash\-completion
  ## or, if running Bash 4.1+
  brew install bash\-completion@2
  ## If kubectl is installed via homebrew, this should start working immediately
  ## If you've installed via other means, you may need add the completion to your completion directory
  kubectl completion bash > $(brew \-\-prefix)/etc/bash\_completion.d/kubectl
  
  
  # Installing bash completion on Linux
  ## If bash\-completion is not installed on Linux, install the 'bash\-completion' package
  ## via your distribution's package manager.
  ## Load the kubectl completion code for bash into the current shell
  source <(kubectl completion bash)
  ## Write bash completion code to a file and source it from .bash\_profile
  kubectl completion bash > \~/.kube/completion.bash.inc
  printf "
  # Kubectl shell completion
  source '$HOME/.kube/completion.bash.inc'
  " >> $HOME/.bash\_profile
  source $HOME/.bash\_profile
  
  # Load the kubectl completion code for zsh[1] into the current shell
  source <(kubectl completion zsh)
  # Set the kubectl completion code for zsh[1] to autoload on startup
  kubectl completion zsh > "${fpath[1]}/\_kubectl"
  
  
  # Load the kubectl completion code for fish[2] into the current shell
  kubectl completion fish | source
  # To load completions for each session, execute once:
  kubectl completion fish > \~/.config/fish/completions/kubectl.fish
  
  # Load the kubectl completion code for powershell into the current shell
  kubectl completion powershell | Out\-String | Invoke\-Expression
  # Set kubectl completion code for powershell to run on startup
  ## Save completion code to a script and execute in the profile
  kubectl completion powershell > $HOME\\.kube\\completion.ps1
  Add\-Content $PROFILE "$HOME\\.kube\\completion.ps1"
  ## Execute completion code in the profile
  Add\-Content $PROFILE "if (Get\-Command kubectl \-ErrorAction SilentlyContinue) {
  kubectl completion powershell | Out\-String | Invoke\-Expression
  }"
  ## Add completion code directly to the $PROFILE script
  kubectl completion powershell >> $PROFILE

.fi
.RE


.SH SEE ALSO
.PP
\fBkubectl(1)\fP,


.SH HISTORY
.PP
January 2015, Originally compiled by Eric Paris (eparis at redhat dot com) based on the kubernetes source material, but hopefully they have been automatically generated since!
