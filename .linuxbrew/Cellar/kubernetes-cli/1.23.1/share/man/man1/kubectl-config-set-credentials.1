.nh
.TH KUBERNETES(1) kubernetes User Manuals
Eric Paris
Jan 2015

.SH NAME
.PP
kubectl config set\-credentials \- Set a user entry in kubeconfig


.SH SYNOPSIS
.PP
\fBkubectl config set\-credentials\fP [OPTIONS]


.SH DESCRIPTION
.PP
Set a user entry in kubeconfig.

.PP
Specifying a name that already exists will merge new fields on top of existing values.

.PP
Client\-certificate flags:
  \-\-client\-certificate=certfile \-\-client\-key=keyfile

.PP
Bearer token flags:
    \-\-token=bearer\_token

.PP
Basic auth flags:
    \-\-username=basic\_user \-\-password=basic\_password

.PP
Bearer token and basic auth are mutually exclusive.


.SH OPTIONS
.PP
\fB\-\-auth\-provider\fP=""
	Auth provider for the user entry in kubeconfig

.PP
\fB\-\-auth\-provider\-arg\fP=[]
	'key=value' arguments for the auth provider

.PP
\fB\-\-embed\-certs\fP=false
	Embed client cert/key for the user entry in kubeconfig

.PP
\fB\-\-exec\-api\-version\fP=""
	API version of the exec credential plugin for the user entry in kubeconfig

.PP
\fB\-\-exec\-arg\fP=[]
	New arguments for the exec credential plugin command for the user entry in kubeconfig

.PP
\fB\-\-exec\-command\fP=""
	Command for the exec credential plugin for the user entry in kubeconfig

.PP
\fB\-\-exec\-env\fP=[]
	'key=value' environment values for the exec credential plugin


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-as\fP=""
	Username to impersonate for the operation. User could be a regular user or a service account in a namespace.

.PP
\fB\-\-as\-group\fP=[]
	Group to impersonate for the operation, this flag can be repeated to specify multiple groups.

.PP
\fB\-\-as\-uid\fP=""
	UID to impersonate for the operation.

.PP
\fB\-\-azure\-container\-registry\-config\fP=""
	Path to the file containing Azure container registry configuration information.

.PP
\fB\-\-cache\-dir\fP="/tmp/kubernetes\-cli\-20211216\-7728\-4tsrr/.brew\_home/.kube/cache"
	Default cache directory

.PP
\fB\-\-certificate\-authority\fP=""
	Path to a cert file for the certificate authority

.PP
\fB\-\-client\-certificate\fP=""
	Path to a client certificate file for TLS

.PP
\fB\-\-client\-key\fP=""
	Path to a client key file for TLS

.PP
\fB\-\-cluster\fP=""
	The name of the kubeconfig cluster to use

.PP
\fB\-\-context\fP=""
	The name of the kubeconfig context to use

.PP
\fB\-\-insecure\-skip\-tls\-verify\fP=false
	If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure

.PP
\fB\-\-kubeconfig\fP=""
	use a particular kubeconfig file

.PP
\fB\-\-match\-server\-version\fP=false
	Require server version to match client version

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
	If present, the namespace scope for this CLI request

.PP
\fB\-\-password\fP=""
	Password for basic authentication to the API server

.PP
\fB\-\-profile\fP="none"
	Name of profile to capture. One of (none|cpu|heap|goroutine|threadcreate|block|mutex)

.PP
\fB\-\-profile\-output\fP="profile.pprof"
	Name of the file to write the profile to

.PP
\fB\-\-request\-timeout\fP="0"
	The length of time to wait before giving up on a single server request. Non\-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests.

.PP
\fB\-s\fP, \fB\-\-server\fP=""
	The address and port of the Kubernetes API server

.PP
\fB\-\-tls\-server\-name\fP=""
	Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used

.PP
\fB\-\-token\fP=""
	Bearer token for authentication to the API server

.PP
\fB\-\-user\fP=""
	The name of the kubeconfig user to use

.PP
\fB\-\-username\fP=""
	Username for basic authentication to the API server

.PP
\fB\-\-version\fP=false
	Print version information and quit

.PP
\fB\-\-warnings\-as\-errors\fP=false
	Treat warnings received from the server as errors and exit with a non\-zero exit code


.SH EXAMPLE
.PP
.RS

.nf
  # Set only the "client\-key" field on the "cluster\-admin"
  # entry, without touching other values
  kubectl config set\-credentials cluster\-admin \-\-client\-key=\~/.kube/admin.key
  
  # Set basic auth for the "cluster\-admin" entry
  kubectl config set\-credentials cluster\-admin \-\-username=admin \-\-password=uXFGweU9l35qcif
  
  # Embed client certificate data in the "cluster\-admin" entry
  kubectl config set\-credentials cluster\-admin \-\-client\-certificate=\~/.kube/admin.crt \-\-embed\-certs=true
  
  # Enable the Google Compute Platform auth provider for the "cluster\-admin" entry
  kubectl config set\-credentials cluster\-admin \-\-auth\-provider=gcp
  
  # Enable the OpenID Connect auth provider for the "cluster\-admin" entry with additional args
  kubectl config set\-credentials cluster\-admin \-\-auth\-provider=oidc \-\-auth\-provider\-arg=client\-id=foo \-\-auth\-provider\-arg=client\-secret=bar
  
  # Remove the "client\-secret" config value for the OpenID Connect auth provider for the "cluster\-admin" entry
  kubectl config set\-credentials cluster\-admin \-\-auth\-provider=oidc \-\-auth\-provider\-arg=client\-secret\-
  
  # Enable new exec auth plugin for the "cluster\-admin" entry
  kubectl config set\-credentials cluster\-admin \-\-exec\-command=/path/to/the/executable \-\-exec\-api\-version=client.authentication.k8s.io/v1beta1
  
  # Define new exec auth plugin args for the "cluster\-admin" entry
  kubectl config set\-credentials cluster\-admin \-\-exec\-arg=arg1 \-\-exec\-arg=arg2
  
  # Create or update exec auth plugin environment variables for the "cluster\-admin" entry
  kubectl config set\-credentials cluster\-admin \-\-exec\-env=key1=val1 \-\-exec\-env=key2=val2
  
  # Remove exec auth plugin environment variables for the "cluster\-admin" entry
  kubectl config set\-credentials cluster\-admin \-\-exec\-env=var\-to\-remove\-

.fi
.RE


.SH SEE ALSO
.PP
\fBkubectl\-config(1)\fP,


.SH HISTORY
.PP
January 2015, Originally compiled by Eric Paris (eparis at redhat dot com) based on the kubernetes source material, but hopefully they have been automatically generated since!
