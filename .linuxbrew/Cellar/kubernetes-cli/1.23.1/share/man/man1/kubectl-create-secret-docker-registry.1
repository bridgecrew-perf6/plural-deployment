.nh
.TH KUBERNETES(1) kubernetes User Manuals
Eric Paris
Jan 2015

.SH NAME
.PP
kubectl create secret docker\-registry \- Create a secret for use with a Docker registry


.SH SYNOPSIS
.PP
\fBkubectl create secret docker\-registry\fP [OPTIONS]


.SH DESCRIPTION
.PP
Create a new secret for use with Docker registries.

.PP
Dockercfg secrets are used to authenticate against Docker registries.

.PP
When using the Docker command line to push images, you can authenticate to a given registry by running:
      '$ docker login DOCKER\_REGISTRY\_SERVER \-\-username=DOCKER\_USER \-\-password=DOCKER\_PASSWORD \-\-email=DOCKER\_EMAIL'.

.PP
That produces a \~/.dockercfg file that is used by subsequent 'docker push' and 'docker pull' commands to authenticate to the registry. The email address is optional.

.PP
When creating applications, you may have a Docker registry that requires authentication.  In order for the
  nodes to pull images on your behalf, they must have the credentials.  You can provide this information
  by creating a dockercfg secret and attaching it to your service account.


.SH OPTIONS
.PP
\fB\-\-allow\-missing\-template\-keys\fP=true
	If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.

.PP
\fB\-\-append\-hash\fP=false
	Append a hash of the secret to its name.

.PP
\fB\-\-docker\-email\fP=""
	Email for Docker registry

.PP
\fB\-\-docker\-password\fP=""
	Password for Docker registry authentication

.PP
\fB\-\-docker\-server\fP="https://index.docker.io/v1/"
	Server location for Docker registry

.PP
\fB\-\-docker\-username\fP=""
	Username for Docker registry authentication

.PP
\fB\-\-dry\-run\fP="none"
	Must be "none", "server", or "client". If client strategy, only print the object that would be sent, without sending it. If server strategy, submit server\-side request without persisting the resource.

.PP
\fB\-\-field\-manager\fP="kubectl\-create"
	Name of the manager used to track field ownership.

.PP
\fB\-\-from\-file\fP=[]
	Key files can be specified using their file path, in which case a default name will be given to them, or optionally with a name and file path, in which case the given name will be used.  Specifying a directory will iterate each named file in the directory that is a valid secret key.

.PP
\fB\-o\fP, \fB\-\-output\fP=""
	Output format. One of: json|yaml|name|go\-template|go\-template\-file|template|templatefile|jsonpath|jsonpath\-as\-json|jsonpath\-file.

.PP
\fB\-\-save\-config\fP=false
	If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.

.PP
\fB\-\-show\-managed\-fields\fP=false
	If true, keep the managedFields when printing objects in JSON or YAML format.

.PP
\fB\-\-template\fP=""
	Template string or path to template file to use when \-o=go\-template, \-o=go\-template\-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg\-overview].

.PP
\fB\-\-validate\fP=true
	If true, use a schema to validate the input before sending it


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-as\fP=""
	Username to impersonate for the operation. User could be a regular user or a service account in a namespace.

.PP
\fB\-\-as\-group\fP=[]
	Group to impersonate for the operation, this flag can be repeated to specify multiple groups.

.PP
\fB\-\-as\-uid\fP=""
	UID to impersonate for the operation.

.PP
\fB\-\-azure\-container\-registry\-config\fP=""
	Path to the file containing Azure container registry configuration information.

.PP
\fB\-\-cache\-dir\fP="/tmp/kubernetes\-cli\-20211216\-7728\-4tsrr/.brew\_home/.kube/cache"
	Default cache directory

.PP
\fB\-\-certificate\-authority\fP=""
	Path to a cert file for the certificate authority

.PP
\fB\-\-client\-certificate\fP=""
	Path to a client certificate file for TLS

.PP
\fB\-\-client\-key\fP=""
	Path to a client key file for TLS

.PP
\fB\-\-cluster\fP=""
	The name of the kubeconfig cluster to use

.PP
\fB\-\-context\fP=""
	The name of the kubeconfig context to use

.PP
\fB\-\-insecure\-skip\-tls\-verify\fP=false
	If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure

.PP
\fB\-\-kubeconfig\fP=""
	Path to the kubeconfig file to use for CLI requests.

.PP
\fB\-\-match\-server\-version\fP=false
	Require server version to match client version

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
	If present, the namespace scope for this CLI request

.PP
\fB\-\-password\fP=""
	Password for basic authentication to the API server

.PP
\fB\-\-profile\fP="none"
	Name of profile to capture. One of (none|cpu|heap|goroutine|threadcreate|block|mutex)

.PP
\fB\-\-profile\-output\fP="profile.pprof"
	Name of the file to write the profile to

.PP
\fB\-\-request\-timeout\fP="0"
	The length of time to wait before giving up on a single server request. Non\-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests.

.PP
\fB\-s\fP, \fB\-\-server\fP=""
	The address and port of the Kubernetes API server

.PP
\fB\-\-tls\-server\-name\fP=""
	Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used

.PP
\fB\-\-token\fP=""
	Bearer token for authentication to the API server

.PP
\fB\-\-user\fP=""
	The name of the kubeconfig user to use

.PP
\fB\-\-username\fP=""
	Username for basic authentication to the API server

.PP
\fB\-\-version\fP=false
	Print version information and quit

.PP
\fB\-\-warnings\-as\-errors\fP=false
	Treat warnings received from the server as errors and exit with a non\-zero exit code


.SH EXAMPLE
.PP
.RS

.nf
  # If you don't already have a .dockercfg file, you can create a dockercfg secret directly by using:
  kubectl create secret docker\-registry my\-secret \-\-docker\-server=DOCKER\_REGISTRY\_SERVER \-\-docker\-username=DOCKER\_USER \-\-docker\-password=DOCKER\_PASSWORD \-\-docker\-email=DOCKER\_EMAIL
  
  # Create a new secret named my\-secret from \~/.docker/config.json
  kubectl create secret docker\-registry my\-secret \-\-from\-file=.dockerconfigjson=path/to/.docker/config.json

.fi
.RE


.SH SEE ALSO
.PP
\fBkubectl\-create\-secret(1)\fP,


.SH HISTORY
.PP
January 2015, Originally compiled by Eric Paris (eparis at redhat dot com) based on the kubernetes source material, but hopefully they have been automatically generated since!
